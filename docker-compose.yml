version: "3"

services:
  frontend:
    build:
      context: ./frontend/app/
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend/app:/app:delegated
      - /app/node_modules
    ports:
      - "8000:5173"

  api-gateway:
    build:
      context: ./backend/api-gateway/app/
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend/api-gateway/app:/app:delegated
      - /app/node_modules
    ports:
      - "8001:80"

  users-service:
    build:
      context: ./backend/users-service/app/
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend/users-service/app:/app:delegated
      - /app/node_modules
    ports:
      - "8002:80"

  question-service-server:
    build:
      context: ./backend/question-service/server/app/
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend/question-service/server/app:/app:delegated
    environment:
      - MONGO_HOST=question-service-db
      - MONGO_PORT=27017
    depends_on:
      question-service-db:
        condition: service_healthy
    ports:
      - "8003:80"

  question-service-db:
    image: mongo:latest
    volumes:
      - question-service-db-data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD-SHELL", "pgrep mongod"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  matching-service:
    build:
      context: ./backend/matching-service/app/
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend/matching-service/app:/app:delegated
      - /app/node_modules
    ports:
      - "8004:80"

  # template-service:
  #   build:
  #     context: ./backend/template-service/app/
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - ./backend/template-service/app:/app:delegated
  #     - /app/node_modules
  #   ports:
  #     - "8009:80"

volumes:
  question-service-db-data:
