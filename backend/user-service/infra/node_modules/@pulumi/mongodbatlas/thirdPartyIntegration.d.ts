import * as pulumi from "@pulumi/pulumi";
/**
 * `mongodbatlas.ThirdPartyIntegration` Provides a Third-Party Integration Settings for the given type.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * > **Note:** Field types NEW_RELIC, FLOWDOCK have now been fully deprecated as part of v1.10.0 release
 *
 * > **NOTE:** Slack integrations now use the OAuth2 verification method and must be initially configured, or updated from a legacy integration, through the Atlas third-party service integrations page. Legacy tokens will soon no longer be supported.[Read more about slack setup](https://docs.atlas.mongodb.com/tutorial/third-party-service-integrations/)
 *
 * > **IMPORTANT** Each project can only have one configuration per {INTEGRATION-TYPE}.
 *
 * > **IMPORTANT:** All arguments including the secrets will be stored in the raw state as plain-text. Read more about sensitive data in state.
 *
 * ## Import
 *
 * Third-Party Integration Settings can be imported using project ID and the integration type, in the format `project_id`-`type`, e.g.
 *
 * ```sh
 *  $ pulumi import mongodbatlas:index/thirdPartyIntegration:ThirdPartyIntegration my_user 1112222b3bf99403840e8934-OPS_GENIE
 * ```
 *  See [MongoDB Atlas API](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Third-Party-Integrations/operation/createThirdPartyIntegration) Documentation for more information.
 */
export declare class ThirdPartyIntegration extends pulumi.CustomResource {
    /**
     * Get an existing ThirdPartyIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ThirdPartyIntegrationState, opts?: pulumi.CustomResourceOptions): ThirdPartyIntegration;
    /**
     * Returns true if the given object is an instance of ThirdPartyIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ThirdPartyIntegration;
    /**
     * Your API Key.
     */
    readonly apiKey: pulumi.Output<string | undefined>;
    readonly channelName: pulumi.Output<string | undefined>;
    /**
     * Whether your cluster has Prometheus enabled.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * Your Microsoft Teams incoming webhook URL.
     */
    readonly microsoftTeamsWebhookUrl: pulumi.Output<string | undefined>;
    /**
     * Your Prometheus password.
     */
    readonly password: pulumi.Output<string | undefined>;
    /**
     * The unique ID for the project to get all Third-Party service integrations
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * Indicates which API URL to use, either "US" or "EU". OpsGenie will use "US" by default.
     */
    readonly region: pulumi.Output<string>;
    /**
     * An optional field for your Routing Key.
     */
    readonly routingKey: pulumi.Output<string | undefined>;
    /**
     * Your Prometheus protocol scheme configured for requests.
     */
    readonly scheme: pulumi.Output<string | undefined>;
    /**
     * An optional field for your webhook secret.
     */
    readonly secret: pulumi.Output<string | undefined>;
    /**
     * Indicates which service discovery method is used, either file or http.
     */
    readonly serviceDiscovery: pulumi.Output<string | undefined>;
    /**
     * Your Service Key.
     */
    readonly serviceKey: pulumi.Output<string | undefined>;
    readonly teamName: pulumi.Output<string | undefined>;
    /**
     * Third-Party Integration Settings type
     * * PAGER_DUTY
     * * DATADOG
     * * OPS_GENIE
     * * VICTOR_OPS
     * * WEBHOOK
     * * MICROSOFT_TEAMS
     * * PROMETHEUS
     * * NEW_RELIC*
     * * FLOWDOCK*
     *
     * *resource has now been fully deprecated as part of v1.10.0 release
     *
     * Additional values based on Type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Your webhook URL.
     */
    readonly url: pulumi.Output<string | undefined>;
    /**
     * Your Prometheus username.
     */
    readonly userName: pulumi.Output<string | undefined>;
    /**
     * Create a ThirdPartyIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ThirdPartyIntegrationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ThirdPartyIntegration resources.
 */
export interface ThirdPartyIntegrationState {
    /**
     * Your API Key.
     */
    apiKey?: pulumi.Input<string>;
    channelName?: pulumi.Input<string>;
    /**
     * Whether your cluster has Prometheus enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Your Microsoft Teams incoming webhook URL.
     */
    microsoftTeamsWebhookUrl?: pulumi.Input<string>;
    /**
     * Your Prometheus password.
     */
    password?: pulumi.Input<string>;
    /**
     * The unique ID for the project to get all Third-Party service integrations
     */
    projectId?: pulumi.Input<string>;
    /**
     * Indicates which API URL to use, either "US" or "EU". OpsGenie will use "US" by default.
     */
    region?: pulumi.Input<string>;
    /**
     * An optional field for your Routing Key.
     */
    routingKey?: pulumi.Input<string>;
    /**
     * Your Prometheus protocol scheme configured for requests.
     */
    scheme?: pulumi.Input<string>;
    /**
     * An optional field for your webhook secret.
     */
    secret?: pulumi.Input<string>;
    /**
     * Indicates which service discovery method is used, either file or http.
     */
    serviceDiscovery?: pulumi.Input<string>;
    /**
     * Your Service Key.
     */
    serviceKey?: pulumi.Input<string>;
    teamName?: pulumi.Input<string>;
    /**
     * Third-Party Integration Settings type
     * * PAGER_DUTY
     * * DATADOG
     * * OPS_GENIE
     * * VICTOR_OPS
     * * WEBHOOK
     * * MICROSOFT_TEAMS
     * * PROMETHEUS
     * * NEW_RELIC*
     * * FLOWDOCK*
     *
     * *resource has now been fully deprecated as part of v1.10.0 release
     *
     * Additional values based on Type
     */
    type?: pulumi.Input<string>;
    /**
     * Your webhook URL.
     */
    url?: pulumi.Input<string>;
    /**
     * Your Prometheus username.
     */
    userName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ThirdPartyIntegration resource.
 */
export interface ThirdPartyIntegrationArgs {
    /**
     * Your API Key.
     */
    apiKey?: pulumi.Input<string>;
    channelName?: pulumi.Input<string>;
    /**
     * Whether your cluster has Prometheus enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Your Microsoft Teams incoming webhook URL.
     */
    microsoftTeamsWebhookUrl?: pulumi.Input<string>;
    /**
     * Your Prometheus password.
     */
    password?: pulumi.Input<string>;
    /**
     * The unique ID for the project to get all Third-Party service integrations
     */
    projectId: pulumi.Input<string>;
    /**
     * Indicates which API URL to use, either "US" or "EU". OpsGenie will use "US" by default.
     */
    region?: pulumi.Input<string>;
    /**
     * An optional field for your Routing Key.
     */
    routingKey?: pulumi.Input<string>;
    /**
     * Your Prometheus protocol scheme configured for requests.
     */
    scheme?: pulumi.Input<string>;
    /**
     * An optional field for your webhook secret.
     */
    secret?: pulumi.Input<string>;
    /**
     * Indicates which service discovery method is used, either file or http.
     */
    serviceDiscovery?: pulumi.Input<string>;
    /**
     * Your Service Key.
     */
    serviceKey?: pulumi.Input<string>;
    teamName?: pulumi.Input<string>;
    /**
     * Third-Party Integration Settings type
     * * PAGER_DUTY
     * * DATADOG
     * * OPS_GENIE
     * * VICTOR_OPS
     * * WEBHOOK
     * * MICROSOFT_TEAMS
     * * PROMETHEUS
     * * NEW_RELIC*
     * * FLOWDOCK*
     *
     * *resource has now been fully deprecated as part of v1.10.0 release
     *
     * Additional values based on Type
     */
    type: pulumi.Input<string>;
    /**
     * Your webhook URL.
     */
    url?: pulumi.Input<string>;
    /**
     * Your Prometheus username.
     */
    userName?: pulumi.Input<string>;
}
