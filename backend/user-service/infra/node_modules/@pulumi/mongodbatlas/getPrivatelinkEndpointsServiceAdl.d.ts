import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * `privatelinkEndpointsServiceAdl` Describes the list of all Atlas Data Lake (ADL) and Online Archive PrivateLink endpoints resource.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 *
 * ## Example Usage
 * ### Basic
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const adlTest = new mongodbatlas.PrivatelinkEndpointServiceAdl("adlTest", {
 *     projectId: "<PROJECT_ID>",
 *     endpointId: "<ENDPOINT_ID>",
 *     comment: "Comment for PrivateLink endpoint ADL",
 *     type: "DATA_LAKE",
 *     providerName: "AWS",
 * });
 * const test = mongodbatlas.getPrivatelinkEndpointsServiceAdlOutput({
 *     projectId: adlTest.projectId,
 * });
 * ```
 */
export declare function getPrivatelinkEndpointsServiceAdl(args: GetPrivatelinkEndpointsServiceAdlArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivatelinkEndpointsServiceAdlResult>;
/**
 * A collection of arguments for invoking getPrivatelinkEndpointsServiceAdl.
 */
export interface GetPrivatelinkEndpointsServiceAdlArgs {
    /**
     * The unique ID for the project.
     *
     * # Attributes Reference
     *
     * In addition to all arguments above, the following attributes are exported:
     */
    projectId: string;
}
/**
 * A collection of values returned by getPrivatelinkEndpointsServiceAdl.
 */
export interface GetPrivatelinkEndpointsServiceAdlResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly links: outputs.GetPrivatelinkEndpointsServiceAdlLink[];
    readonly projectId: string;
    readonly results: outputs.GetPrivatelinkEndpointsServiceAdlResult[];
    readonly totalCount: number;
}
/**
 * `privatelinkEndpointsServiceAdl` Describes the list of all Atlas Data Lake (ADL) and Online Archive PrivateLink endpoints resource.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 *
 * ## Example Usage
 * ### Basic
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const adlTest = new mongodbatlas.PrivatelinkEndpointServiceAdl("adlTest", {
 *     projectId: "<PROJECT_ID>",
 *     endpointId: "<ENDPOINT_ID>",
 *     comment: "Comment for PrivateLink endpoint ADL",
 *     type: "DATA_LAKE",
 *     providerName: "AWS",
 * });
 * const test = mongodbatlas.getPrivatelinkEndpointsServiceAdlOutput({
 *     projectId: adlTest.projectId,
 * });
 * ```
 */
export declare function getPrivatelinkEndpointsServiceAdlOutput(args: GetPrivatelinkEndpointsServiceAdlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrivatelinkEndpointsServiceAdlResult>;
/**
 * A collection of arguments for invoking getPrivatelinkEndpointsServiceAdl.
 */
export interface GetPrivatelinkEndpointsServiceAdlOutputArgs {
    /**
     * The unique ID for the project.
     *
     * # Attributes Reference
     *
     * In addition to all arguments above, the following attributes are exported:
     */
    projectId: pulumi.Input<string>;
}
