"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOrganizationOutput = exports.getOrganization = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * `mongodbatlas.Organization` describe all MongoDB Atlas Organizations. This represents organizations that have been created.
 *
 * ## Example Usage
 * ### Using projectId attribute to query
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getOrganization({
 *     orgId: "<org_id>",
 * });
 * ```
 */
function getOrganization(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getOrganization:getOrganization", {
        "orgId": args.orgId,
    }, opts);
}
exports.getOrganization = getOrganization;
/**
 * `mongodbatlas.Organization` describe all MongoDB Atlas Organizations. This represents organizations that have been created.
 *
 * ## Example Usage
 * ### Using projectId attribute to query
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getOrganization({
 *     orgId: "<org_id>",
 * });
 * ```
 */
function getOrganizationOutput(args, opts) {
    return pulumi.output(args).apply((a) => getOrganization(a, opts));
}
exports.getOrganizationOutput = getOrganizationOutput;
//# sourceMappingURL=getOrganization.js.map