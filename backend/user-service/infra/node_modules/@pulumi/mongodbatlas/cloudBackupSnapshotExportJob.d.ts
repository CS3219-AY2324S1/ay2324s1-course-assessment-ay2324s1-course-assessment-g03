import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * `mongodbatlas.CloudBackupSnapshotExportJob` resource allows you to create a cloud backup snapshot export job for the specified project.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testCloudBackupSnapshotExportBucket = new mongodbatlas.CloudBackupSnapshotExportBucket("testCloudBackupSnapshotExportBucket", {
 *     projectId: "{PROJECT_ID}",
 *     iamRoleId: "{IAM_ROLE_ID}",
 *     bucketName: "example_bucket",
 *     cloudProvider: "AWS",
 * });
 * const testCloudBackupSnapshotExportJob = new mongodbatlas.CloudBackupSnapshotExportJob("testCloudBackupSnapshotExportJob", {
 *     projectId: "{PROJECT_ID}",
 *     clusterName: "{CLUSTER_NAME}",
 *     snapshotId: "{SNAPSHOT_ID}",
 *     exportBucketId: testCloudBackupSnapshotExportBucket.exportBucketId,
 *     customDatas: [{
 *         key: "exported by",
 *         value: "myName",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Backup Snapshot Export Backup entries can be imported using project project_id, cluster_name and export_job_id (Unique identifier of the snapshot export job), in the format `PROJECTID-CLUSTERNAME-EXPORTJOBID`, e.g.
 *
 * ```sh
 *  $ pulumi import mongodbatlas:index/cloudBackupSnapshotExportJob:CloudBackupSnapshotExportJob test 5d0f1f73cf09a29120e173cf-5d116d82014b764445b2f9b5-5d116d82014b764445b2f9b5
 * ```
 *  For more information see[MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/reference/api/cloud-backup/export/create-one-export-job/)
 */
export declare class CloudBackupSnapshotExportJob extends pulumi.CustomResource {
    /**
     * Get an existing CloudBackupSnapshotExportJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudBackupSnapshotExportJobState, opts?: pulumi.CustomResourceOptions): CloudBackupSnapshotExportJob;
    /**
     * Returns true if the given object is an instance of CloudBackupSnapshotExportJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CloudBackupSnapshotExportJob;
    /**
     * Name of the Atlas cluster whose snapshot you want to export.
     */
    readonly clusterName: pulumi.Output<string>;
    /**
     * _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
     */
    readonly components: pulumi.Output<outputs.CloudBackupSnapshotExportJobComponent[]>;
    /**
     * Timestamp in ISO 8601 date and time format in UTC when the export job was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Custom data to include in the metadata file named `.complete` that Atlas uploads to the bucket when the export job finishes. Custom data can be specified as key and value pairs.
     */
    readonly customDatas: pulumi.Output<outputs.CloudBackupSnapshotExportJobCustomData[]>;
    /**
     * Error message, only if the export job failed.
     */
    readonly errMsg: pulumi.Output<string>;
    /**
     * Unique identifier of the AWS bucket to export the Cloud Backup snapshot to. If necessary, use the Get All Snapshot Export Buckets
     */
    readonly exportBucketId: pulumi.Output<string>;
    /**
     * Unique identifier of the export job.
     * * `prefix ` - Full path on the cloud provider bucket to the folder where the snapshot is exported. The path is in the following format:`/exported_snapshots/{ORG-NAME}/{PROJECT-NAME}/{CLUSTER-NAME}/{SNAPSHOT-INITIATION-DATE}/{TIMESTAMP}`
     */
    readonly exportJobId: pulumi.Output<string>;
    readonly exportStatusExportedCollections: pulumi.Output<number>;
    readonly exportStatusTotalCollections: pulumi.Output<number>;
    /**
     * Timestamp in ISO 8601 date and time format in UTC when the export job completes.
     */
    readonly finishedAt: pulumi.Output<string>;
    readonly prefix: pulumi.Output<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the project which contains the Atlas cluster whose snapshot you want to export.
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * Unique identifier of the Cloud Backup snapshot to export. If necessary, use the Get All Cloud Backups
     */
    readonly snapshotId: pulumi.Output<string>;
    /**
     * Status of the export job. Value can be one of the following:
     */
    readonly state: pulumi.Output<string>;
    /**
     * Create a CloudBackupSnapshotExportJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudBackupSnapshotExportJobArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CloudBackupSnapshotExportJob resources.
 */
export interface CloudBackupSnapshotExportJobState {
    /**
     * Name of the Atlas cluster whose snapshot you want to export.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
     */
    components?: pulumi.Input<pulumi.Input<inputs.CloudBackupSnapshotExportJobComponent>[]>;
    /**
     * Timestamp in ISO 8601 date and time format in UTC when the export job was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Custom data to include in the metadata file named `.complete` that Atlas uploads to the bucket when the export job finishes. Custom data can be specified as key and value pairs.
     */
    customDatas?: pulumi.Input<pulumi.Input<inputs.CloudBackupSnapshotExportJobCustomData>[]>;
    /**
     * Error message, only if the export job failed.
     */
    errMsg?: pulumi.Input<string>;
    /**
     * Unique identifier of the AWS bucket to export the Cloud Backup snapshot to. If necessary, use the Get All Snapshot Export Buckets
     */
    exportBucketId?: pulumi.Input<string>;
    /**
     * Unique identifier of the export job.
     * * `prefix ` - Full path on the cloud provider bucket to the folder where the snapshot is exported. The path is in the following format:`/exported_snapshots/{ORG-NAME}/{PROJECT-NAME}/{CLUSTER-NAME}/{SNAPSHOT-INITIATION-DATE}/{TIMESTAMP}`
     */
    exportJobId?: pulumi.Input<string>;
    exportStatusExportedCollections?: pulumi.Input<number>;
    exportStatusTotalCollections?: pulumi.Input<number>;
    /**
     * Timestamp in ISO 8601 date and time format in UTC when the export job completes.
     */
    finishedAt?: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the project which contains the Atlas cluster whose snapshot you want to export.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Unique identifier of the Cloud Backup snapshot to export. If necessary, use the Get All Cloud Backups
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * Status of the export job. Value can be one of the following:
     */
    state?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CloudBackupSnapshotExportJob resource.
 */
export interface CloudBackupSnapshotExportJobArgs {
    /**
     * Name of the Atlas cluster whose snapshot you want to export.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Custom data to include in the metadata file named `.complete` that Atlas uploads to the bucket when the export job finishes. Custom data can be specified as key and value pairs.
     */
    customDatas: pulumi.Input<pulumi.Input<inputs.CloudBackupSnapshotExportJobCustomData>[]>;
    /**
     * Unique identifier of the AWS bucket to export the Cloud Backup snapshot to. If necessary, use the Get All Snapshot Export Buckets
     */
    exportBucketId: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the project which contains the Atlas cluster whose snapshot you want to export.
     */
    projectId: pulumi.Input<string>;
    /**
     * Unique identifier of the Cloud Backup snapshot to export. If necessary, use the Get All Cloud Backups
     */
    snapshotId: pulumi.Input<string>;
}
