"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupCompliancePolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Import
 *
 * Backup Compliance Policy entries can be imported using project project_id
 *
 * in the format `project_id`, e.g.
 *
 * ```sh
 *  $ pulumi import mongodbatlas:index/backupCompliancePolicy:BackupCompliancePolicy backup_policy 5d0f1f73cf09a29120e173cf
 * ```
 *  For more information see[MongoDB Atlas API Reference](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Cloud-Backups/operation/updateDataProtectionSettings) and [Backup Compliance Policy Prohibited Actions](https://www.mongodb.com/docs/atlas/backup/cloud-backup/backup-compliance-policy/#prohibited-actions).
 */
class BackupCompliancePolicy extends pulumi.CustomResource {
    /**
     * Get an existing BackupCompliancePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new BackupCompliancePolicy(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of BackupCompliancePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupCompliancePolicy.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["authorizedEmail"] = state ? state.authorizedEmail : undefined;
            resourceInputs["copyProtectionEnabled"] = state ? state.copyProtectionEnabled : undefined;
            resourceInputs["encryptionAtRestEnabled"] = state ? state.encryptionAtRestEnabled : undefined;
            resourceInputs["onDemandPolicyItem"] = state ? state.onDemandPolicyItem : undefined;
            resourceInputs["pitEnabled"] = state ? state.pitEnabled : undefined;
            resourceInputs["policyItemDaily"] = state ? state.policyItemDaily : undefined;
            resourceInputs["policyItemHourly"] = state ? state.policyItemHourly : undefined;
            resourceInputs["policyItemMonthlies"] = state ? state.policyItemMonthlies : undefined;
            resourceInputs["policyItemWeeklies"] = state ? state.policyItemWeeklies : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["restoreWindowDays"] = state ? state.restoreWindowDays : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["updatedDate"] = state ? state.updatedDate : undefined;
            resourceInputs["updatedUser"] = state ? state.updatedUser : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.authorizedEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authorizedEmail'");
            }
            if ((!args || args.copyProtectionEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'copyProtectionEnabled'");
            }
            if ((!args || args.encryptionAtRestEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'encryptionAtRestEnabled'");
            }
            if ((!args || args.onDemandPolicyItem === undefined) && !opts.urn) {
                throw new Error("Missing required property 'onDemandPolicyItem'");
            }
            if ((!args || args.pitEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pitEnabled'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["authorizedEmail"] = args ? args.authorizedEmail : undefined;
            resourceInputs["copyProtectionEnabled"] = args ? args.copyProtectionEnabled : undefined;
            resourceInputs["encryptionAtRestEnabled"] = args ? args.encryptionAtRestEnabled : undefined;
            resourceInputs["onDemandPolicyItem"] = args ? args.onDemandPolicyItem : undefined;
            resourceInputs["pitEnabled"] = args ? args.pitEnabled : undefined;
            resourceInputs["policyItemDaily"] = args ? args.policyItemDaily : undefined;
            resourceInputs["policyItemHourly"] = args ? args.policyItemHourly : undefined;
            resourceInputs["policyItemMonthlies"] = args ? args.policyItemMonthlies : undefined;
            resourceInputs["policyItemWeeklies"] = args ? args.policyItemWeeklies : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["restoreWindowDays"] = args ? args.restoreWindowDays : undefined;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updatedDate"] = undefined /*out*/;
            resourceInputs["updatedUser"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BackupCompliancePolicy.__pulumiType, name, resourceInputs, opts);
    }
}
exports.BackupCompliancePolicy = BackupCompliancePolicy;
/** @internal */
BackupCompliancePolicy.__pulumiType = 'mongodbatlas:index/backupCompliancePolicy:BackupCompliancePolicy';
//# sourceMappingURL=backupCompliancePolicy.js.map