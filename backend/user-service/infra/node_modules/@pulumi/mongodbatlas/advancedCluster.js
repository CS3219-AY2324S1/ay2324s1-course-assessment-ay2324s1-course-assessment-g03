"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdvancedCluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Import
 *
 * Clusters can be imported using project ID and cluster name, in the format `PROJECTID-CLUSTERNAME`, e.g.
 *
 * ```sh
 *  $ pulumi import mongodbatlas:index/advancedCluster:AdvancedCluster my_cluster 1112222b3bf99403840e8934-Cluster0
 * ```
 *  See detailed information for arguments and attributes[MongoDB API Advanced Clusters](https://docs.atlas.mongodb.com/reference/api/cluster-advanced/create-one-cluster-advanced/)
 */
class AdvancedCluster extends pulumi.CustomResource {
    /**
     * Get an existing AdvancedCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AdvancedCluster(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AdvancedCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdvancedCluster.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["advancedConfiguration"] = state ? state.advancedConfiguration : undefined;
            resourceInputs["backupEnabled"] = state ? state.backupEnabled : undefined;
            resourceInputs["biConnectorConfig"] = state ? state.biConnectorConfig : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["clusterType"] = state ? state.clusterType : undefined;
            resourceInputs["connectionStrings"] = state ? state.connectionStrings : undefined;
            resourceInputs["createDate"] = state ? state.createDate : undefined;
            resourceInputs["diskSizeGb"] = state ? state.diskSizeGb : undefined;
            resourceInputs["encryptionAtRestProvider"] = state ? state.encryptionAtRestProvider : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["mongoDbMajorVersion"] = state ? state.mongoDbMajorVersion : undefined;
            resourceInputs["mongoDbVersion"] = state ? state.mongoDbVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["paused"] = state ? state.paused : undefined;
            resourceInputs["pitEnabled"] = state ? state.pitEnabled : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["replicationSpecs"] = state ? state.replicationSpecs : undefined;
            resourceInputs["retainBackupsEnabled"] = state ? state.retainBackupsEnabled : undefined;
            resourceInputs["rootCertType"] = state ? state.rootCertType : undefined;
            resourceInputs["stateName"] = state ? state.stateName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["terminationProtectionEnabled"] = state ? state.terminationProtectionEnabled : undefined;
            resourceInputs["versionReleaseSystem"] = state ? state.versionReleaseSystem : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.clusterType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterType'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.replicationSpecs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'replicationSpecs'");
            }
            resourceInputs["advancedConfiguration"] = args ? args.advancedConfiguration : undefined;
            resourceInputs["backupEnabled"] = args ? args.backupEnabled : undefined;
            resourceInputs["biConnectorConfig"] = args ? args.biConnectorConfig : undefined;
            resourceInputs["clusterType"] = args ? args.clusterType : undefined;
            resourceInputs["diskSizeGb"] = args ? args.diskSizeGb : undefined;
            resourceInputs["encryptionAtRestProvider"] = args ? args.encryptionAtRestProvider : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["mongoDbMajorVersion"] = args ? args.mongoDbMajorVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["paused"] = args ? args.paused : undefined;
            resourceInputs["pitEnabled"] = args ? args.pitEnabled : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["replicationSpecs"] = args ? args.replicationSpecs : undefined;
            resourceInputs["retainBackupsEnabled"] = args ? args.retainBackupsEnabled : undefined;
            resourceInputs["rootCertType"] = args ? args.rootCertType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["terminationProtectionEnabled"] = args ? args.terminationProtectionEnabled : undefined;
            resourceInputs["versionReleaseSystem"] = args ? args.versionReleaseSystem : undefined;
            resourceInputs["clusterId"] = undefined /*out*/;
            resourceInputs["connectionStrings"] = undefined /*out*/;
            resourceInputs["createDate"] = undefined /*out*/;
            resourceInputs["mongoDbVersion"] = undefined /*out*/;
            resourceInputs["stateName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AdvancedCluster.__pulumiType, name, resourceInputs, opts);
    }
}
exports.AdvancedCluster = AdvancedCluster;
/** @internal */
AdvancedCluster.__pulumiType = 'mongodbatlas:index/advancedCluster:AdvancedCluster';
//# sourceMappingURL=advancedCluster.js.map