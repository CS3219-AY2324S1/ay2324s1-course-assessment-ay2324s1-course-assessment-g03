import * as pulumi from "@pulumi/pulumi";
/**
 * `mongodbatlas.CloudBackupSnapshotExportBucket` resource allows you to create an export snapshot bucket for the specified project.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = new mongodbatlas.CloudBackupSnapshotExportBucket("test", {
 *     bucketName: "example-bucket",
 *     cloudProvider: "AWS",
 *     iamRoleId: "{IAM_ROLE_ID}",
 *     projectId: "{PROJECT_ID}",
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Backup Snapshot Export Backup entries can be imported using project project_id, and bucket_id (Unique identifier of the snapshot export bucket), in the format `PROJECTID-BUCKETID`, e.g.
 *
 * ```sh
 *  $ pulumi import mongodbatlas:index/cloudBackupSnapshotExportBucket:CloudBackupSnapshotExportBucket test 5d0f1f73cf09a29120e173cf-5d116d82014b764445b2f9b5
 * ```
 *  For more information see[MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/reference/api/cloud-backup/export/create-one-export-bucket/)
 */
export declare class CloudBackupSnapshotExportBucket extends pulumi.CustomResource {
    /**
     * Get an existing CloudBackupSnapshotExportBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudBackupSnapshotExportBucketState, opts?: pulumi.CustomResourceOptions): CloudBackupSnapshotExportBucket;
    /**
     * Returns true if the given object is an instance of CloudBackupSnapshotExportBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CloudBackupSnapshotExportBucket;
    /**
     * Name of the bucket that the provided role ID is authorized to access. You must also specify the `iamRoleId`.
     */
    readonly bucketName: pulumi.Output<string>;
    /**
     * Name of the provider of the cloud service where Atlas can access the S3 bucket. Atlas only supports `AWS`.
     */
    readonly cloudProvider: pulumi.Output<string>;
    /**
     * Unique identifier of the snapshot export bucket.
     */
    readonly exportBucketId: pulumi.Output<string>;
    /**
     * Unique identifier of the role that Atlas can use to access the bucket. You must also specify the `bucketName`.
     */
    readonly iamRoleId: pulumi.Output<string>;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * Create a CloudBackupSnapshotExportBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudBackupSnapshotExportBucketArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CloudBackupSnapshotExportBucket resources.
 */
export interface CloudBackupSnapshotExportBucketState {
    /**
     * Name of the bucket that the provided role ID is authorized to access. You must also specify the `iamRoleId`.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Name of the provider of the cloud service where Atlas can access the S3 bucket. Atlas only supports `AWS`.
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * Unique identifier of the snapshot export bucket.
     */
    exportBucketId?: pulumi.Input<string>;
    /**
     * Unique identifier of the role that Atlas can use to access the bucket. You must also specify the `bucketName`.
     */
    iamRoleId?: pulumi.Input<string>;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    projectId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CloudBackupSnapshotExportBucket resource.
 */
export interface CloudBackupSnapshotExportBucketArgs {
    /**
     * Name of the bucket that the provided role ID is authorized to access. You must also specify the `iamRoleId`.
     */
    bucketName: pulumi.Input<string>;
    /**
     * Name of the provider of the cloud service where Atlas can access the S3 bucket. Atlas only supports `AWS`.
     */
    cloudProvider: pulumi.Input<string>;
    /**
     * Unique identifier of the role that Atlas can use to access the bucket. You must also specify the `bucketName`.
     */
    iamRoleId: pulumi.Input<string>;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    projectId: pulumi.Input<string>;
}
