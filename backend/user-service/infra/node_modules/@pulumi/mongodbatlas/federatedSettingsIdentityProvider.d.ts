import * as pulumi from "@pulumi/pulumi";
/**
 * `mongodbatlas.FederatedSettingsIdentityProvider` provides an Atlas federated settings identity provider resource provides a subset of settings to be maintained post import of the existing resource.
 * ## Example Usage
 *
 * > **IMPORTANT** You **MUST** import this resource before you can manage it with this provider.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const identityProvider = new mongodbatlas.FederatedSettingsIdentityProvider("identityProvider", {
 *     associatedDomains: ["yourdomain.com"],
 *     federationSettingsId: "627a9687f7f7f7f774de306f14",
 *     issuerUri: "http://www.okta.com/exk17q7f7f7f7fp50h8",
 *     requestBinding: "HTTP-POST",
 *     responseSignatureAlgorithm: "SHA-256",
 *     ssoDebugEnabled: true,
 *     ssoUrl: "https://mysso.oktapreview.com/app/mysso_terraformtestsso/exk17q7f7f7f7f50h8/sso/saml",
 *     status: "ACTIVE",
 * });
 * ```
 *
 * ## Import
 *
 * Identity Provider __must__ be imported before using federation_settings_id-idp_id, e.g.
 *
 * ```sh
 *  $ pulumi import mongodbatlas:index/federatedSettingsIdentityProvider:FederatedSettingsIdentityProvider identity_provider 6287a663c660f52b1c441c6c-0oad4fas87jL5Xnk1297
 * ```
 *  For more information see[MongoDB Atlas API Reference.](https://www.mongodb.com/docs/atlas/reference/api/federation-configuration/)
 */
export declare class FederatedSettingsIdentityProvider extends pulumi.CustomResource {
    /**
     * Get an existing FederatedSettingsIdentityProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FederatedSettingsIdentityProviderState, opts?: pulumi.CustomResourceOptions): FederatedSettingsIdentityProvider;
    /**
     * Returns true if the given object is an instance of FederatedSettingsIdentityProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FederatedSettingsIdentityProvider;
    /**
     * List that contains the domains associated with the identity provider.
     */
    readonly associatedDomains: pulumi.Output<string[] | undefined>;
    /**
     * Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
     */
    readonly federationSettingsId: pulumi.Output<string>;
    /**
     * Unique string that identifies the issuer of the SAML
     */
    readonly issuerUri: pulumi.Output<string>;
    /**
     * Human-readable label that identifies the identity provider.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Unique 20-hexadecimal digit string that identifies the IdP.
     */
    readonly oktaIdpId: pulumi.Output<string>;
    /**
     * SAML Authentication Request Protocol HTTP method binding (POST or REDIRECT) that Federated Authentication uses to send the authentication request. Atlas supports the following binding values:
     * - HTTP POST
     * - HTTP REDIRECT
     */
    readonly requestBinding: pulumi.Output<string>;
    /**
     * Signature algorithm that Federated Authentication uses to encrypt the identity provider signature.  Valid values include SHA-1 and SHA-256.
     */
    readonly responseSignatureAlgorithm: pulumi.Output<string>;
    /**
     * Flag that indicates whether the identity provider has SSO debug enabled.
     */
    readonly ssoDebugEnabled: pulumi.Output<boolean>;
    /**
     * Unique string that identifies the intended audience of the SAML assertion.
     */
    readonly ssoUrl: pulumi.Output<string>;
    /**
     * String enum that indicates whether the identity provider is active or not. Accepted values are ACTIVE or INACTIVE.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Create a FederatedSettingsIdentityProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FederatedSettingsIdentityProviderArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FederatedSettingsIdentityProvider resources.
 */
export interface FederatedSettingsIdentityProviderState {
    /**
     * List that contains the domains associated with the identity provider.
     */
    associatedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
     */
    federationSettingsId?: pulumi.Input<string>;
    /**
     * Unique string that identifies the issuer of the SAML
     */
    issuerUri?: pulumi.Input<string>;
    /**
     * Human-readable label that identifies the identity provider.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique 20-hexadecimal digit string that identifies the IdP.
     */
    oktaIdpId?: pulumi.Input<string>;
    /**
     * SAML Authentication Request Protocol HTTP method binding (POST or REDIRECT) that Federated Authentication uses to send the authentication request. Atlas supports the following binding values:
     * - HTTP POST
     * - HTTP REDIRECT
     */
    requestBinding?: pulumi.Input<string>;
    /**
     * Signature algorithm that Federated Authentication uses to encrypt the identity provider signature.  Valid values include SHA-1 and SHA-256.
     */
    responseSignatureAlgorithm?: pulumi.Input<string>;
    /**
     * Flag that indicates whether the identity provider has SSO debug enabled.
     */
    ssoDebugEnabled?: pulumi.Input<boolean>;
    /**
     * Unique string that identifies the intended audience of the SAML assertion.
     */
    ssoUrl?: pulumi.Input<string>;
    /**
     * String enum that indicates whether the identity provider is active or not. Accepted values are ACTIVE or INACTIVE.
     */
    status?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a FederatedSettingsIdentityProvider resource.
 */
export interface FederatedSettingsIdentityProviderArgs {
    /**
     * List that contains the domains associated with the identity provider.
     */
    associatedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
     */
    federationSettingsId: pulumi.Input<string>;
    /**
     * Unique string that identifies the issuer of the SAML
     */
    issuerUri: pulumi.Input<string>;
    /**
     * Human-readable label that identifies the identity provider.
     */
    name?: pulumi.Input<string>;
    /**
     * SAML Authentication Request Protocol HTTP method binding (POST or REDIRECT) that Federated Authentication uses to send the authentication request. Atlas supports the following binding values:
     * - HTTP POST
     * - HTTP REDIRECT
     */
    requestBinding: pulumi.Input<string>;
    /**
     * Signature algorithm that Federated Authentication uses to encrypt the identity provider signature.  Valid values include SHA-1 and SHA-256.
     */
    responseSignatureAlgorithm: pulumi.Input<string>;
    /**
     * Flag that indicates whether the identity provider has SSO debug enabled.
     */
    ssoDebugEnabled: pulumi.Input<boolean>;
    /**
     * Unique string that identifies the intended audience of the SAML assertion.
     */
    ssoUrl: pulumi.Input<string>;
    /**
     * String enum that indicates whether the identity provider is active or not. Accepted values are ACTIVE or INACTIVE.
     */
    status: pulumi.Input<string>;
}
